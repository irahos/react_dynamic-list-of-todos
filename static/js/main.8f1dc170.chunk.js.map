{"version":3,"sources":["types/StatusState.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectedTodoId","onTodoSelected","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","status","onStatusChange","query","onQueryChange","value","onChange","event","target","all","active","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectedUser","setSelectedUser","isLoading","setIsLoading","useEffect","userId","catch","Error","finally","href","email","name","App","statusToFilter","setTodos","selectedTodo","setSelectedTodo","setStatus","setQuery","filteredTodos","todosToFilter","queryToFilter","normalizedQuery","toLowerCase","trim","filter","includes","filterTodosByQuery","ReactDOM","render","document","getElementById"],"mappings":"sMAAYA,E,mECUCC,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GAAD,OACT,qBACE,UAAQ,OACRF,UAAWG,IAAW,CACpB,4BAA6BL,IAAmBI,EAAKE,KAHzD,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,WACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWG,IAAW,CACpB,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAH7B,SAMGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAeG,IAJhC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAW,MACvB,CACE,SAAUL,IAAmBI,EAAKE,GAClC,eAAgBN,IAAmBI,EAAKE,eA/B7CF,EAAKE,c,SDrCVT,K,UAAAA,E,gBAAAA,E,uBAAAA,M,eEUCc,EAAoC,SAAC,GAAD,IAC/CC,EAD+C,EAC/CA,OACAC,EAF+C,EAE/CA,eACAC,EAH+C,EAG/CA,MACAC,EAJ+C,EAI/CA,cAJ+C,OAM/C,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOJ,EACPK,SAAU,SAACC,GACTL,EAAeK,EAAMC,OAAOH,QAJhC,UAOE,wBAAQA,MAAM,MAAMN,QAAS,kBAAMG,EAAehB,EAAOuB,MAAzD,iBAGA,wBAAQJ,MAAM,SAASN,QAAS,kBAAMG,EAAehB,EAAOwB,SAA5D,oBAGA,wBACEL,MAAM,YACNN,QAAS,kBAAMG,EAAehB,EAAOU,YAFvC,8BAUN,oBAAGL,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVoB,YAAY,YACZN,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAcG,EAAMC,OAAOH,UAElD,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,6BAAhB,SACGY,GACC,wBACE,UAAQ,oBACRL,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMK,EAAc,KAC7B,aAAW,0BC3DVQ,G,MAAmB,kBAC9B,qBAAKrB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASsB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAA8B,IAA5B/B,EAA2B,EAA3BA,KAAMH,EAAqB,EAArBA,eACjD,EAAwCmC,mBAAsB,MAA9D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,oBAAkB,GAApD,mBAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,qBAAU,WDWW,IAACC,ECVpBF,GAAa,GAETpC,IDQgBsC,ECPVtC,EAAKsC,ODOwBlB,EAAG,iBAAiBkB,KCNtDX,KAAKO,GACLK,OAAM,WACL,MAAM,IAAIC,MAAM,yBAEjBC,SAAQ,WACPL,GAAa,QAGlB,IAGD,sBAAKtC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBACdqC,EACC,cAAC,EAAD,IAEA,sBAAKrC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIYE,QAJZ,IAIYA,OAJZ,EAIYA,EAAME,MAGlB,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMT,EAAe,OAC9B,aAAW,mBAIf,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGE,QADH,IACGA,OADH,EACGA,EAAMI,QAGT,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACO,OAAJE,QAAI,IAAJA,KAAMG,UACL,wBAAQL,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAG4C,KAAI,wBAAYT,QAAZ,IAAYA,OAAZ,EAAYA,EAAcU,OAAjC,gBAA2CV,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAcW,oBCvD1DC,EAAgB,WAC3B,IAMoDC,EANpD,EAA0Bd,mBAAiB,IAA3C,mBAAOrC,EAAP,KAAcoD,EAAd,KACA,EAAkCf,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwCJ,mBAAsB,MAA9D,mBAAOgB,EAAP,KAAqBC,EAArB,KACA,EAA4BjB,mBAASvC,EAAOuB,KAA5C,mBAAOR,EAAP,KAAe0C,EAAf,KACA,EAA0BlB,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcyC,EAAd,KAwBMC,EATqB,SAACC,EAAuBC,GACjD,IAAMC,EAAkBD,EAAcE,cAAcC,OAEpD,OAAOJ,EAAcK,QAAO,SAAA1D,GAC1B,OAAOA,EAAKI,MAAMoD,cAAcG,SAASJ,MAKvBK,EAtB8Bd,EAqBKtC,EAAPb,EApB3B+D,QAAO,SAAC1D,GAC3B,OAAQ8C,GACN,KAAKrD,EAAOwB,OACV,OAAQjB,EAAKG,UACf,KAAKV,EAAOU,UACV,OAAOH,EAAKG,UACd,QACE,OAAO,OAciDO,GAehE,OAbA2B,qBAAU,WACRD,GAAa,GFrBahB,EAAY,UEwBnCO,KAAKoB,GACLR,OAAM,WACL,MAAM,IAAIC,MAAM,0BAEjBC,SAAQ,WACPL,GAAa,QAEhB,IAGD,qCACE,qBAAKtC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,OAAQA,EACRC,eAAgByC,EAChBxC,MAAOA,EACPC,cAAewC,MAInB,qBAAKrD,UAAU,QAAf,SACGqC,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACExC,MAAOyD,EACPvD,eAAgBoD,EAChBrD,eAAc,OAAEoD,QAAF,IAAEA,OAAF,EAAEA,EAAc9C,cAQzC8C,GACC,cAAC,EAAD,CACEhD,KAAMgD,EACNnD,eAAgBoD,QCxF1BY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f1dc170.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number | undefined;\n  onTodoSelected: (todo: Todo | null) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onTodoSelected,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelected(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far',\n                    {\n                      'fa-eye': selectedTodoId !== todo.id,\n                      'fa-eye-slash': selectedTodoId === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Status } from '../../types/StatusState';\nimport './TodoFilter.css';\n\ntype FilterProps = {\n  status: Status;\n  onStatusChange: (status: Status) => void;\n  query: string;\n  onQueryChange: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<FilterProps> = ({\n  status,\n  onStatusChange,\n  query,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => {\n            onStatusChange(event.target.value as Status);\n          }}\n        >\n          <option value=\"all\" onClick={() => onStatusChange(Status.all)}>\n            All\n          </option>\n          <option value=\"active\" onClick={() => onStatusChange(Status.active)}>\n            Active\n          </option>\n          <option\n            value=\"completed\"\n            onClick={() => onStatusChange(Status.completed)}\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right clear-button\">\n        {query && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n            aria-label=\"Clear Search\"\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo | null;\n  onTodoSelected: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onTodoSelected }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (todo) {\n      getUser(todo.userId)\n        .then(setSelectedUser)\n        .catch(() => {\n          throw new Error('Can not load user!');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onTodoSelected(null)}\n              aria-label=\"Close Modal\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>{selectedUser?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/StatusState';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState(Status.all);\n  const [query, setQuery] = useState('');\n\n  const filterTodosByStatus = (todosToFilter: Todo[], statusToFilter: string) => {\n    return todosToFilter.filter((todo) => {\n      switch (statusToFilter) {\n        case Status.active:\n          return !todo.completed;\n        case Status.completed:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  };\n\n  const filterTodosByQuery = (todosToFilter: Todo[], queryToFilter: string) => {\n    const normalizedQuery = queryToFilter.toLowerCase().trim();\n\n    return todosToFilter.filter(todo => {\n      return todo.title.toLowerCase().includes(normalizedQuery);\n    });\n  };\n\n  const filteredTodosByStatus = filterTodosByStatus(todos, status);\n  const filteredTodos = filterTodosByQuery(filteredTodosByStatus, query);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch(() => {\n        throw new Error('Can not load todos!');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                onStatusChange={setStatus}\n                query={query}\n                onQueryChange={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  onTodoSelected={setSelectedTodo}\n                  selectedTodoId={selectedTodo?.id}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onTodoSelected={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}